<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hta.elevator.mapper.PassengerMapper">
    
    <resultMap type="com.hta.elevator.domain.Passenger" id="PassengerResult">
        <result property="Id"    column="Id"    />
        <result property="Mobile"    column="Mobile"    />
        <result property="Password"    column="Password"    />
        <result property="UnionId"    column="UnionId"    />
        <result property="WxOpenId"    column="WxOpenId"    />
        <result property="CreateTime"    column="CreateTime"    />
        <result property="UpdateTime"    column="UpdateTime"    />
    </resultMap>
	
	<sql id="selectPassengerVo">
        select Id, Mobile, Password, UnionId, WxOpenId, CreateTime, UpdateTime from Passenger
    </sql>
	
    <select id="selectListOrPage" parameterType="com.hta.elevator.domain.Passenger" resultMap="PassengerResult">
        <include refid="selectPassengerVo"/>
        <where>  
            <if test="Id != null "> and Id = #{Id}</if>
             <if test="Mobile != null  and Mobile != '' "> and Mobile = #{Mobile}</if>
             <if test="Password != null  and Password != '' "> and Password = #{Password}</if>
             <if test="UnionId != null  and UnionId != '' "> and UnionId = #{UnionId}</if>
             <if test="WxOpenId != null  and WxOpenId != '' "> and WxOpenId = #{WxOpenId}</if>
             <if test="CreateTime != null "> and CreateTime = #{CreateTime}</if>
             <if test="UpdateTime != null "> and UpdateTime = #{UpdateTime}</if>
         </where>
    </select>
    <select id="selectListCount" parameterType="com.hta.elevator.domain.Passenger" resultType="Integer">
        select count(*)  from Passenger
        <where>  
            <if test="Id != null "> and Id = #{Id}</if>
             <if test="Mobile != null  and Mobile != '' "> and Mobile = #{Mobile}</if>
             <if test="Password != null  and Password != '' "> and Password = #{Password}</if>
             <if test="UnionId != null  and UnionId != '' "> and UnionId = #{UnionId}</if>
             <if test="WxOpenId != null  and WxOpenId != '' "> and WxOpenId = #{WxOpenId}</if>
             <if test="CreateTime != null "> and CreateTime = #{CreateTime}</if>
             <if test="UpdateTime != null "> and UpdateTime = #{UpdateTime}</if>
         </where>
    </select>
    <select id="selectByPrimaryKey" parameterType="Integer" resultMap="PassengerResult">
        <include refid="selectPassengerVo"/>
        where Id = #{Id}
    </select>
    
    <insert id="insertSelective" parameterType="com.hta.elevator.domain.Passenger">
        insert into Passenger
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="Id != null  ">Id,</if>
			<if test="Mobile != null  and Mobile != ''  ">Mobile,</if>
			<if test="Password != null  and Password != ''  ">Password,</if>
			<if test="UnionId != null  and UnionId != ''  ">UnionId,</if>
			<if test="WxOpenId != null  and WxOpenId != ''  ">WxOpenId,</if>
			<if test="CreateTime != null  ">CreateTime,</if>
			<if test="UpdateTime != null  ">UpdateTime,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="Id != null  ">#{Id},</if>
			<if test="Mobile != null  and Mobile != ''  ">#{Mobile},</if>
			<if test="Password != null  and Password != ''  ">#{Password},</if>
			<if test="UnionId != null  and UnionId != ''  ">#{UnionId},</if>
			<if test="WxOpenId != null  and WxOpenId != ''  ">#{WxOpenId},</if>
			<if test="CreateTime != null  ">#{CreateTime},</if>
			<if test="UpdateTime != null  ">#{UpdateTime},</if>
         </trim>
    </insert>
	 
    <update id="updateByPrimaryKeySelective" parameterType="com.hta.elevator.domain.Passenger">
        update Passenger
        <trim prefix="SET" suffixOverrides=",">
            <if test="Mobile != null  and Mobile != ''  ">Mobile = #{Mobile},</if>
            <if test="Password != null  and Password != ''  ">Password = #{Password},</if>
            <if test="UnionId != null  and UnionId != ''  ">UnionId = #{UnionId},</if>
            <if test="WxOpenId != null  and WxOpenId != ''  ">WxOpenId = #{WxOpenId},</if>
            <if test="CreateTime != null  ">CreateTime = #{CreateTime},</if>
            <if test="UpdateTime != null  ">UpdateTime = #{UpdateTime},</if>
        </trim>
        where Id = #{Id}
    </update>

	<delete id="deleteByPrimaryKey" parameterType="Integer">
        delete from Passenger where Id = #{Id}
    </delete>
	
    <delete id="batchDeleteByIds" parameterType="String">
        delete from Passenger where Id in 
        <foreach item="Id" collection="array" open="(" separator="," close=")">
            #{Id}
        </foreach>
    </delete>
    <insert id="batchInsert" parameterType="com.hta.elevator.domain.Passenger">
        insert into Passenger
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="Id != null  ">Id,</if>
			<if test="Mobile != null  and Mobile != ''  ">Mobile,</if>
			<if test="Password != null  and Password != ''  ">Password,</if>
			<if test="UnionId != null  and UnionId != ''  ">UnionId,</if>
			<if test="WxOpenId != null  and WxOpenId != ''  ">WxOpenId,</if>
			<if test="CreateTime != null  ">CreateTime,</if>
			<if test="UpdateTime != null  ">UpdateTime,</if>
         </trim>
         VALUES
 <foreach item="t" collection="list" index="index"  separator="," >
           <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="Id != null  ">#{t.Id},</if>
			<if test="Mobile != null  and Mobile != ''  ">#{t.Mobile},</if>
			<if test="Password != null  and Password != ''  ">#{t.Password},</if>
			<if test="UnionId != null  and UnionId != ''  ">#{t.UnionId},</if>
			<if test="WxOpenId != null  and WxOpenId != ''  ">#{t.WxOpenId},</if>
			<if test="CreateTime != null  ">#{t.CreateTime},</if>
			<if test="UpdateTime != null  ">#{t.UpdateTime},</if>
         </trim>
  </foreach>
        
    </insert>
</mapper>